{"version":3,"sources":["components/Form.js","components/FilterButton.js","components/Todo/Todo.js","App.js","index.js"],"names":["Form","props","useState","name","setName","onSubmit","e","preventDefault","addTask","className","htmlFor","type","id","autoComplete","value","onChange","target","FilterButton","isPressed","onClick","setFilter","Todo","isEditing","setEditing","newName","setNewName","editingTemplate","editTask","viewTemplate","defaultChecked","completed","toggleTaskCompleted","deleteTask","FILTER_MAP","All","Active","task","Completed","FILTER_NAMES","Object","keys","App","tasks","setTasks","filter","updatedTasks","map","completadas","remainingTasks","editedTaskList","taskList","filterList","tasksNoun","length","headingText","newTask","nanoid","role","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c79e85fd.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nfunction Form(props) {\n  const [name, setName] = useState(\"\");\n\n  function handleChange(e) {\n    setName(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.addTask(name);\n    setName(\"\");\n  }\n  return (\n    <form onSubmit={handleSubmit}>\n      <h2 className=\"label-wrapper\">\n        <label htmlFor=\"new-todo-input\" className=\"label__lg\">\n          Tareas pendientes\n        </label>\n      </h2>\n      <input\n        type=\"text\"\n        id=\"new-todo-input\"\n        className=\"input input__lg\"\n        name=\"text\"\n        autoComplete=\"off\"\n        value={name}\n        onChange={handleChange}\n      />\n      <button type=\"submit\" className=\"btn btn__primary btn__lg\">\n        AÃ±adir\n      </button>\n    </form>\n  );\n}\n\nexport default Form;","import React from \"react\";\n\nfunction FilterButton(props) {\n  return (\n    <button\n      type=\"button\"\n      className=\"btn toggle-btn\"\n      aria-pressed={props.isPressed}\n      onClick={() => props.setFilter(props.name)}\n    >\n      <span className=\"visually-hidden\">Show </span>\n      <span>{props.name}</span>\n      <span className=\"visually-hidden\"> tasks</span>\n    </button>\n  );\n}\n\nexport default FilterButton;","import React, { useState } from \"react\";\n\n\nimport './Todo.css';\n\nexport default function Todo(props) {\n  const [isEditing, setEditing] = useState(false);\n  const [newName, setNewName] = useState('');\n\n  function handleChange(e) {\n    setNewName(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.editTask(props.id, newName);\n    setNewName(\"\");\n    setEditing(false);\n  }\n\n  const editingTemplate = (\n    <form className=\"stack-small\" onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label className=\"todo-label\" htmlFor={props.id}>\n          Nueva tarea para \"{props.name}\"\n        </label>\n        \n        <input id={props.id} className=\"todo-text\" type=\"text\" value={newName} onChange={handleChange}/>\n      </div>\n      <div className=\"btn-group\">\n      <button type=\"button\" className=\"btn todo-cancel\" onClick={() => setEditing(false)} >\n        Cancelar\n         <span className=\"visually-hidden\">renaming {props.name}</span>\n      </button>\n        <button type=\"submit\" className=\"btn btn__primary todo-edit\">\n          Guardar\n          <span className=\"visually-hidden\">Nueva tarea para \"{props.name}\"</span>\n        </button>\n      </div>\n    </form>\n  );\n  const viewTemplate = (\n    <div className=\"stack-small\">\n      <div className=\"c-cb\">\n          <input\n            id={props.id}\n            type=\"checkbox\"\n            defaultChecked={props.completed}\n            onChange={() => props.toggleTaskCompleted(props.id)}\n          />\n          <label className=\"todo-label\" htmlFor={props.id}>\n            {props.name}\n          </label>\n        </div>\n        <div className=\"btn-group\">\n        <button type=\"button\" className=\"btn\" onClick={() => setEditing(true)}>\n          Editar <span className=\"visually-hidden\">{props.name}</span>\n        </button>\n          <button\n            type=\"button\"\n            className=\"btn btn__danger\"\n            onClick={() => props.deleteTask(props.id)}\n          >\n            Borrar <span className=\"visually-hidden\">{props.name}</span>\n          </button>\n        </div>\n    </div>\n  );\n\n\n  return <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>;\n}","import { nanoid } from \"nanoid\";\nimport React, { useState } from \"react\";\nimport Form from \"./components/Form\";\nimport FilterButton from \"./components/FilterButton\";\nimport Todo from \"./components/Todo\";\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed\n};\n\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nfunction App(props) {\n  const [tasks, setTasks] = useState(props.tasks);\n  const [filter, setFilter] = useState('All');\n\n  function addTask(name) {\n    const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\n    setTasks([...tasks, newTask]);\n  }\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        // use object spread to make a new object\n        // whose `completed` prop has been inverted\n        return {...task, completadas: !task.completed}\n      }\n      return task;\n    });\n    setTasks(updatedTasks);\n  }\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter(task => id !== task.id);\n    setTasks(remainingTasks);\n  }\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map(task => {\n    // if this task has the same ID as the edited task\n      if (id === task.id) {\n        //\n        return {...task, name: newName}\n      }\n      return task;\n    });\n    setTasks(editedTaskList);\n  }\n\n  const taskList = tasks\n    .filter(FILTER_MAP[filter])\n    .map(task => (\n      <Todo\n        id={task.id}\n        name={task.name}\n        completed={task.completed}\n        key={task.id}\n        toggleTaskCompleted={toggleTaskCompleted}\n        deleteTask={deleteTask}\n        editTask={editTask}\n      />\n  ));\n  \n\n  const filterList = FILTER_NAMES.map(name => (\n    <FilterButton\n      key={name}\n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter}\n    />\n  ));\n\n  const tasksNoun = taskList.length !== 1 ? 'tareas' : 'tarea';\n  const headingText = `Quedan ${taskList.length} ${tasksNoun}`;\n  \n  return (\n    <div className=\"todoapp stack-large\">\n      <h1>Administrador de tareas</h1>\n      <Form addTask={addTask} />\n      <div className=\"filters btn-group stack-exception\">\n        {filterList}\n      </div>\n      <h2 id=\"list-heading\">{headingText}</h2>\n      <ul\n        role=\"list\"\n        className=\"todo-list stack-large stack-exception\"\n        aria-labelledby=\"list-heading\"\n      >\n        {taskList}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nconst DATA = [\n  { id: \"todo-0\", name: \"Comer\", completed: true },\n  { id: \"todo-1\", name: \"Dormir\", completed: false },\n  { id: \"todo-2\", name: \"Repetir\", completed: false }\n];\n\nReactDOM.render(<App tasks={DATA} />, document.getElementById(\"root\"));\n"],"sourceRoot":""}